## This is a sample configuration file. See the nxlog reference manual about the
## configuration options. It should be installed locally and is also available
## online at http://nxlog.org/docs/

## Please set the ROOT to the folder your nxlog was installed into,
## otherwise it will not start.

define ROOT C:\Program Files\nxlog
#define ROOT C:\Program Files (x86)\nxlog

Moduledir %ROOT%\modules
CacheDir %ROOT%\data
Pidfile %ROOT%\data\nxlog.pid
SpoolDir %ROOT%\data
LogFile %ROOT%\data\nxlog.log

<Extension _syslog>
    Module      xm_syslog
</Extension>

<Input in>
	Module im_msvistalog
	ReadFromLast TRUE
	SavePos FALSE

	# Selección de eventos a enviar según PDF de N-Reporter
	# http://www.npartnertech.com/download/tech/%20N-Reporter-Windows-File-Server-auditTosyslog_en.pdf
	<QueryXML>
		<QueryList>
			<Query Id="0">
				<Select Path="Application">
					*[System[(EventID=1033) and Provider[@Name='MsiInstaller']]]
				</Select>
<!-- En eventID 1 hay que filtrar por Usuario, porque el evento que llega desde Sysmon no está filtrado por usuario -->
				<Select Path="Microsoft-Windows-Sysmon/Operational">
					*[System[(EventID=1)]]
						and
					*[EventData[Data[@Name="User"] and (Data="IE11Win8_1\IEUser")]]	
				</Select>
<!-- En eventID3 no hace falta filtrar por IExplore.exe, porque el eventId 3 ya viene filtrado para IExplore.exe desde Sysmon -->
				<Select Path="Microsoft-Windows-Sysmon/Operational">
					*[System[(EventID=3)]]
				</Select>
			</Query>
		</QueryList>
	</QueryXML>
	
	# Convertimos el nombre que se envía a nombre de host corto (sin el dominio)
	Exec $Hostname = hostname();
</Input>

<Output out>
	Module om_udp
	# Cambiar por la IP con la dirección del Ubuntu con el Syslog remoto activado
	Host 192.168.56.104
	Port 514
	<Exec>
		$Message = string($Channel) + " - EventID " + string($EventID) + " - " + $Message;

		# Traducción Windows -> Syslog
		# https://en.wikipedia.org/wiki/Syslog
		
		# HardwareEvents == kern (0)
		# System == uucp (8)
		# Security == news (7)
		# Application == local0 (16)
		# Sysmon == local1 (17)
		# Otros == local2 (18)
		
		if ($Channel == "Security") { $SyslogFacilityValue = 7; }
			else if ($Channel == "System") { $SyslogFacilityValue = 8; }
			else if ($Channel == "HardwareEvents") { $SyslogFacilityValue = 0; }
			else if ($Channel == "Application") { $SyslogFacilityValue = 16; }
			else if ($Channel == "Microsoft-Windows-Sysmon/Operational") { $SyslogFacilityValue = 17; }
			else { $SyslogFacilityValue = 18; }

		# Error = 3 (Error conditions)
		# Warning = 4 (May indicate that an error will occur if action is not taken)
		# Notice = 5 (Events that are unusual, but not error conditions)
		# Info = 6 (Information)
		
		if ($EventType == 'ERROR' or $EventType == 'AUDIT_FAILURE') { $SyslogSeverityValue = 3; }
			else if ($EventType == 'WARNING') { $SyslogSeverityValue = 4; }
			else if ($EventType == 'AUDIT_SUCCESS') { $SyslogSeverityValue = 5; }
			else if ($EventType == 'INFO') { $SyslogSeverityValue = 6; }

		# https://www.alienvault.com/documentation/usm-v5/plugin-management/supported-plugins/configuring-nxlog.htm
		# Replace newlines, tabs and carriage returns with blanks:
		$Message = replace($Message, "\t", " "); $Message = replace($Message, "\n", " "); $Message = replace($Message, "\r", " ");

		# Ensure that commonly undefined values are set:
		if not defined $AccountName { $AccountName = "-"; }
		if not defined $AccountType { $AccountType = "-"; }
		if not defined $Domain { $Domain = "-"; }			

		to_syslog_bsd();
	</Exec>
</Output>

<Route 1>
    Path        in => out
</Route>
